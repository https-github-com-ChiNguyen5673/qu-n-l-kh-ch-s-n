//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace quanlyKhachSan
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLKHACHSANEntities : DbContext
    {
        public QLKHACHSANEntities()
            : base("name=QLKHACHSANEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CHITIETDATPHONG> CHITIETDATPHONGs { get; set; }
        public virtual DbSet<CHITIETSUDUNGDV> CHITIETSUDUNGDVs { get; set; }
        public virtual DbSet<DICHVU> DICHVUs { get; set; }
        public virtual DbSet<HDTHANHTOAN> HDTHANHTOANs { get; set; }
        public virtual DbSet<KHACHHANG> KHACHHANGs { get; set; }
        public virtual DbSet<LOAIDICHVU> LOAIDICHVUs { get; set; }
        public virtual DbSet<LOAIPHONG> LOAIPHONGs { get; set; }
        public virtual DbSet<NHANVIEN> NHANVIENs { get; set; }
        public virtual DbSet<PCKHACHHANG> PCKHACHHANGs { get; set; }
        public virtual DbSet<PHONG> PHONGs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<VATDUNG> VATDUNGs { get; set; }
        public virtual DbSet<GIAODIEN> GIAODIENs { get; set; }
        public virtual DbSet<TAIKHOAN> TAIKHOANs { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int USP_CreateBill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CreateBill");
        }
    
        public virtual ObjectResult<USP_SearchCustomer_Result> USP_SearchCustomer(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_SearchCustomer_Result>("USP_SearchCustomer", nameParameter);
        }
    
        public virtual ObjectResult<USP_ShowCustomer_Result> USP_ShowCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ShowCustomer_Result>("USP_ShowCustomer");
        }
    
        public virtual int USP_AddCustomer(Nullable<int> idEmploye, string customerName, string phoneNumber, Nullable<bool> sex, string identityCart, string address, Nullable<System.DateTime> birthDay)
        {
            var idEmployeParameter = idEmploye.HasValue ?
                new ObjectParameter("idEmploye", idEmploye) :
                new ObjectParameter("idEmploye", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(bool));
    
            var identityCartParameter = identityCart != null ?
                new ObjectParameter("identityCart", identityCart) :
                new ObjectParameter("identityCart", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var birthDayParameter = birthDay.HasValue ?
                new ObjectParameter("birthDay", birthDay) :
                new ObjectParameter("birthDay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_AddCustomer", idEmployeParameter, customerNameParameter, phoneNumberParameter, sexParameter, identityCartParameter, addressParameter, birthDayParameter);
        }
    
        public virtual int USP_BillDelete(Nullable<int> idbill)
        {
            var idbillParameter = idbill.HasValue ?
                new ObjectParameter("idbill", idbill) :
                new ObjectParameter("idbill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_BillDelete", idbillParameter);
        }
    
        public virtual int USP_DeleteAllRoomSelected(Nullable<int> idbill)
        {
            var idbillParameter = idbill.HasValue ?
                new ObjectParameter("idbill", idbill) :
                new ObjectParameter("idbill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DeleteAllRoomSelected", idbillParameter);
        }
    
        public virtual ObjectResult<USP_ShowRoomSelectedByIdBill_Result> USP_ShowRoomSelectedByIdBill(Nullable<int> idBill)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ShowRoomSelectedByIdBill_Result>("USP_ShowRoomSelectedByIdBill", idBillParameter);
        }
    
        public virtual ObjectResult<GetAllServiceList_Result> GetAllServiceList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllServiceList_Result>("GetAllServiceList");
        }
    
        public virtual ObjectResult<USP_GetDetalBill_Result> USP_GetDetalBill(Nullable<int> idRoom)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("idRoom", idRoom) :
                new ObjectParameter("idRoom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetDetalBill_Result>("USP_GetDetalBill", idRoomParameter);
        }
    
        public virtual ObjectResult<USP_GetBill_Result> USP_GetBill(Nullable<int> idBill)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetBill_Result>("USP_GetBill", idBillParameter);
        }
    
        public virtual ObjectResult<USP_GetCustomer_Result> USP_GetCustomer(Nullable<int> idCustomer)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("idCustomer", idCustomer) :
                new ObjectParameter("idCustomer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetCustomer_Result>("USP_GetCustomer", idCustomerParameter);
        }
    
        public virtual ObjectResult<GetSearchServiceList_Result> GetSearchServiceList(string serviceName)
        {
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("serviceName", serviceName) :
                new ObjectParameter("serviceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchServiceList_Result>("GetSearchServiceList", serviceNameParameter);
        }
    
        public virtual ObjectResult<USP_ShowDetailServiceUsed_Result> USP_ShowDetailServiceUsed(Nullable<int> idBill)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ShowDetailServiceUsed_Result>("USP_ShowDetailServiceUsed", idBillParameter);
        }
    
        public virtual int USP_UpdateTotalRoomCharge(Nullable<int> idBill)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateTotalRoomCharge", idBillParameter);
        }
    
        public virtual int USP_UpdateTotalService(Nullable<int> idBill)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateTotalService", idBillParameter);
        }
    
        public virtual ObjectResult<USP_ShowBill_Result> USP_ShowBill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ShowBill_Result>("USP_ShowBill");
        }
    
        public virtual ObjectResult<USP_InBill_Result> USP_InBill(Nullable<int> idBill)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_InBill_Result>("USP_InBill", idBillParameter);
        }
    
        public virtual ObjectResult<USP_ShowRoomSelectedByIdBill2_Result> USP_ShowRoomSelectedByIdBill2(Nullable<int> idBill)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ShowRoomSelectedByIdBill2_Result>("USP_ShowRoomSelectedByIdBill2", idBillParameter);
        }
    
        public virtual int USP_UpdateRoomStatus(Nullable<int> idRoom, Nullable<int> rStatus)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("idRoom", idRoom) :
                new ObjectParameter("idRoom", typeof(int));
    
            var rStatusParameter = rStatus.HasValue ?
                new ObjectParameter("rStatus", rStatus) :
                new ObjectParameter("rStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateRoomStatus", idRoomParameter, rStatusParameter);
        }
    
        public virtual int USP_DeleteGroupRoom(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DeleteGroupRoom", idParameter);
        }
    
        public virtual int USP_DeleteRoom(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DeleteRoom", idParameter);
        }
    
        public virtual int USP_DeleteService(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DeleteService", idParameter);
        }
    
        public virtual ObjectResult<USP_GetRoom_Result> USP_GetRoom(Nullable<int> idRoom)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("idRoom", idRoom) :
                new ObjectParameter("idRoom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetRoom_Result>("USP_GetRoom", idRoomParameter);
        }
    
        public virtual int USP_InsertGroupRoom(string name, string detal, Nullable<decimal> priceHoursLate, Nullable<decimal> priceDay, Nullable<decimal> priceMonth, Nullable<decimal> priceHoursFirst)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detalParameter = detal != null ?
                new ObjectParameter("detal", detal) :
                new ObjectParameter("detal", typeof(string));
    
            var priceHoursLateParameter = priceHoursLate.HasValue ?
                new ObjectParameter("priceHoursLate", priceHoursLate) :
                new ObjectParameter("priceHoursLate", typeof(decimal));
    
            var priceDayParameter = priceDay.HasValue ?
                new ObjectParameter("priceDay", priceDay) :
                new ObjectParameter("priceDay", typeof(decimal));
    
            var priceMonthParameter = priceMonth.HasValue ?
                new ObjectParameter("priceMonth", priceMonth) :
                new ObjectParameter("priceMonth", typeof(decimal));
    
            var priceHoursFirstParameter = priceHoursFirst.HasValue ?
                new ObjectParameter("priceHoursFirst", priceHoursFirst) :
                new ObjectParameter("priceHoursFirst", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InsertGroupRoom", nameParameter, detalParameter, priceHoursLateParameter, priceDayParameter, priceMonthParameter, priceHoursFirstParameter);
        }
    
        public virtual int USP_insertGroupService(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_insertGroupService", nameParameter);
        }
    
        public virtual int USP_InsertRoom(string name, Nullable<int> groupRoomId, Nullable<int> floor, Nullable<int> status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var groupRoomIdParameter = groupRoomId.HasValue ?
                new ObjectParameter("groupRoomId", groupRoomId) :
                new ObjectParameter("groupRoomId", typeof(int));
    
            var floorParameter = floor.HasValue ?
                new ObjectParameter("floor", floor) :
                new ObjectParameter("floor", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InsertRoom", nameParameter, groupRoomIdParameter, floorParameter, statusParameter);
        }
    
        public virtual int USP_InsertService(string name, Nullable<decimal> price, string detail, Nullable<int> amount, string unit, Nullable<int> idGroup)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var detailParameter = detail != null ?
                new ObjectParameter("detail", detail) :
                new ObjectParameter("detail", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("idGroup", idGroup) :
                new ObjectParameter("idGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InsertService", nameParameter, priceParameter, detailParameter, amountParameter, unitParameter, idGroupParameter);
        }
    
        public virtual ObjectResult<USP_SearchGroupRoom_Result> USP_SearchGroupRoom(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_SearchGroupRoom_Result>("USP_SearchGroupRoom", nameParameter);
        }
    
        public virtual ObjectResult<USP_SearchRoom_Result> USP_SearchRoom(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_SearchRoom_Result>("USP_SearchRoom", nameParameter);
        }
    
        public virtual ObjectResult<USP_SearchService_Result> USP_SearchService(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_SearchService_Result>("USP_SearchService", nameParameter);
        }
    
        public virtual int USP_UpdateGroupRoom(Nullable<int> id, string name, string detal, Nullable<decimal> priceHoursLate, Nullable<decimal> priceDay, Nullable<decimal> priceMonth, Nullable<decimal> priceHoursFirst)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detalParameter = detal != null ?
                new ObjectParameter("detal", detal) :
                new ObjectParameter("detal", typeof(string));
    
            var priceHoursLateParameter = priceHoursLate.HasValue ?
                new ObjectParameter("priceHoursLate", priceHoursLate) :
                new ObjectParameter("priceHoursLate", typeof(decimal));
    
            var priceDayParameter = priceDay.HasValue ?
                new ObjectParameter("priceDay", priceDay) :
                new ObjectParameter("priceDay", typeof(decimal));
    
            var priceMonthParameter = priceMonth.HasValue ?
                new ObjectParameter("priceMonth", priceMonth) :
                new ObjectParameter("priceMonth", typeof(decimal));
    
            var priceHoursFirstParameter = priceHoursFirst.HasValue ?
                new ObjectParameter("priceHoursFirst", priceHoursFirst) :
                new ObjectParameter("priceHoursFirst", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateGroupRoom", idParameter, nameParameter, detalParameter, priceHoursLateParameter, priceDayParameter, priceMonthParameter, priceHoursFirstParameter);
        }
    
        public virtual int USP_UpdateGroupService(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateGroupService", idParameter, nameParameter);
        }
    
        public virtual int USP_UpdateRoom(Nullable<int> id, string name, string detal, Nullable<int> groupRoomId, Nullable<int> floor, Nullable<int> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detalParameter = detal != null ?
                new ObjectParameter("detal", detal) :
                new ObjectParameter("detal", typeof(string));
    
            var groupRoomIdParameter = groupRoomId.HasValue ?
                new ObjectParameter("groupRoomId", groupRoomId) :
                new ObjectParameter("groupRoomId", typeof(int));
    
            var floorParameter = floor.HasValue ?
                new ObjectParameter("floor", floor) :
                new ObjectParameter("floor", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateRoom", idParameter, nameParameter, detalParameter, groupRoomIdParameter, floorParameter, statusParameter);
        }
    
        public virtual int USP_UpdateService(Nullable<int> id, string name, Nullable<decimal> price, string detail, Nullable<int> amount, string unit, Nullable<int> idGroup)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var detailParameter = detail != null ?
                new ObjectParameter("detail", detail) :
                new ObjectParameter("detail", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("idGroup", idGroup) :
                new ObjectParameter("idGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateService", idParameter, nameParameter, priceParameter, detailParameter, amountParameter, unitParameter, idGroupParameter);
        }
    
        public virtual ObjectResult<USP_ViewGroupRoom_Result> USP_ViewGroupRoom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ViewGroupRoom_Result>("USP_ViewGroupRoom");
        }
    
        public virtual ObjectResult<USP_ViewGroupService_Result> USP_ViewGroupService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ViewGroupService_Result>("USP_ViewGroupService");
        }
    
        public virtual ObjectResult<USP_ViewRoom_Result> USP_ViewRoom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ViewRoom_Result>("USP_ViewRoom");
        }
    
        public virtual ObjectResult<USP_ViewService_Result> USP_ViewService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ViewService_Result>("USP_ViewService");
        }
    
        public virtual ObjectResult<USP_ViewGroupRoom1_Result> USP_ViewGroupRoom1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ViewGroupRoom1_Result>("USP_ViewGroupRoom1");
        }
    
        public virtual ObjectResult<USP_ShowBill1_Result> USP_ShowBill1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ShowBill1_Result>("USP_ShowBill1");
        }
    
        public virtual int USP_TraserRoomIdInDetailBill(Nullable<int> fromRoomID, Nullable<int> toRoomId)
        {
            var fromRoomIDParameter = fromRoomID.HasValue ?
                new ObjectParameter("fromRoomID", fromRoomID) :
                new ObjectParameter("fromRoomID", typeof(int));
    
            var toRoomIdParameter = toRoomId.HasValue ?
                new ObjectParameter("toRoomId", toRoomId) :
                new ObjectParameter("toRoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_TraserRoomIdInDetailBill", fromRoomIDParameter, toRoomIdParameter);
        }
    
        public virtual ObjectResult<USP_ShowBillByDate_Result> USP_ShowBillByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ShowBillByDate_Result>("USP_ShowBillByDate", fromDateParameter, toDateParameter);
        }
    
        public virtual int USP_DeleteRoomItem(Nullable<int> roomItemID)
        {
            var roomItemIDParameter = roomItemID.HasValue ?
                new ObjectParameter("roomItemID", roomItemID) :
                new ObjectParameter("roomItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DeleteRoomItem", roomItemIDParameter);
        }
    
        public virtual int USP_DelteCustomer(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DelteCustomer", customerIdParameter);
        }
    
        public virtual int USP_InsertRoomItem(string name, string manufacture, Nullable<System.DateTime> sateTime, string detail, Nullable<int> roomId, Nullable<decimal> price)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var manufactureParameter = manufacture != null ?
                new ObjectParameter("manufacture", manufacture) :
                new ObjectParameter("manufacture", typeof(string));
    
            var sateTimeParameter = sateTime.HasValue ?
                new ObjectParameter("sateTime", sateTime) :
                new ObjectParameter("sateTime", typeof(System.DateTime));
    
            var detailParameter = detail != null ?
                new ObjectParameter("detail", detail) :
                new ObjectParameter("detail", typeof(string));
    
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("roomId", roomId) :
                new ObjectParameter("roomId", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InsertRoomItem", nameParameter, manufactureParameter, sateTimeParameter, detailParameter, roomIdParameter, priceParameter);
        }
    
        public virtual int USP_UpdateCustomer(Nullable<int> customerId, Nullable<int> groupId, string customerName, string customerPhone, string customerIdCard, string customerAddress, Nullable<bool> customerSex, Nullable<System.DateTime> customerBirthDay)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var customerPhoneParameter = customerPhone != null ?
                new ObjectParameter("customerPhone", customerPhone) :
                new ObjectParameter("customerPhone", typeof(string));
    
            var customerIdCardParameter = customerIdCard != null ?
                new ObjectParameter("customerIdCard", customerIdCard) :
                new ObjectParameter("customerIdCard", typeof(string));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("customerAddress", customerAddress) :
                new ObjectParameter("customerAddress", typeof(string));
    
            var customerSexParameter = customerSex.HasValue ?
                new ObjectParameter("customerSex", customerSex) :
                new ObjectParameter("customerSex", typeof(bool));
    
            var customerBirthDayParameter = customerBirthDay.HasValue ?
                new ObjectParameter("customerBirthDay", customerBirthDay) :
                new ObjectParameter("customerBirthDay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateCustomer", customerIdParameter, groupIdParameter, customerNameParameter, customerPhoneParameter, customerIdCardParameter, customerAddressParameter, customerSexParameter, customerBirthDayParameter);
        }
    
        public virtual int USP_UpdateRoomItem(Nullable<int> roomItemID, string name, string manufacture, Nullable<System.DateTime> sateTime, string detail, Nullable<int> roomId, Nullable<decimal> price)
        {
            var roomItemIDParameter = roomItemID.HasValue ?
                new ObjectParameter("roomItemID", roomItemID) :
                new ObjectParameter("roomItemID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var manufactureParameter = manufacture != null ?
                new ObjectParameter("manufacture", manufacture) :
                new ObjectParameter("manufacture", typeof(string));
    
            var sateTimeParameter = sateTime.HasValue ?
                new ObjectParameter("sateTime", sateTime) :
                new ObjectParameter("sateTime", typeof(System.DateTime));
    
            var detailParameter = detail != null ?
                new ObjectParameter("detail", detail) :
                new ObjectParameter("detail", typeof(string));
    
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("roomId", roomId) :
                new ObjectParameter("roomId", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateRoomItem", roomItemIDParameter, nameParameter, manufactureParameter, sateTimeParameter, detailParameter, roomIdParameter, priceParameter);
        }
    
        public virtual ObjectResult<USP_ViewRoomItemOfRoom_Result> USP_ViewRoomItemOfRoom(Nullable<int> roomID)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("roomID", roomID) :
                new ObjectParameter("roomID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ViewRoomItemOfRoom_Result>("USP_ViewRoomItemOfRoom", roomIDParameter);
        }
    }
}
